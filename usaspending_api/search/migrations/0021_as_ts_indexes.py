# Generated by Django 3.2.13 on 2023-01-20 22:44

from django.db import migrations, models
import django.db.models.expressions


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0020_auto_20221215_2029'),
    ]

    operations = [
        # Django processed these as both removing and re-adding them in the same migration
        migrations.RunSQL(
            sql='',
            state_operations=[
                migrations.RemoveIndex(
                    model_name='awardsearch',
                    name='as_idx_funding_agency_id',
                ),
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['funding_agency_id'], name='as_idx_funding_agency_id'),
                ),
            ]
        ),
        migrations.RunSQL(
            sql='',
            state_operations=[
                migrations.RemoveIndex(
                    model_name='transactionsearch',
                    name='ts_idx_type',
                ),
                migrations.AddIndex(
                    model_name='transactionsearch',
                    index=models.Index(condition=models.Q(('type__isnull', False)), fields=['type'],
                                       name='ts_idx_type'),
                ),
            ]
        ),
        migrations.RunSQL(
            sql='',
            state_operations=[
                migrations.RemoveIndex(
                    model_name='transactionsearch',
                    name='ts_idx_award_id',
                ),
                migrations.AddIndex(
                    model_name='transactionsearch',
                    index=models.Index(fields=['award'], name='ts_idx_award_id'),
                ),
            ]
        ),
        # Rename secret indexes and add them to the model
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_category_93aecaef RENAME TO as_idx_category',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['category'], name='as_idx_category'),
                ),
            ]
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_category_93aecaef_like RENAME TO as_idx_category_like',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['category'], name='as_idx_category_like'),
                ),
            ]
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_type_73bb5bc8 RENAME TO as_idx_type',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['type'], name='as_idx_type'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_type_73bb5bc8_like RENAME TO as_idx_type_like',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['type'], name='as_idx_type_like'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_total_obligation_9b14cadd RENAME TO as_idx_total_obligation',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['total_obligation'], name='as_idx_total_obligation'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_piid_3549d1f1 RENAME TO as_idx_piid',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['piid'], name='as_idx_piid'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_piid_3549d1f1_like RENAME TO as_idx_piid_like',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['piid'], name='as_idx_piid_like'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_parent_award_piid_652c7e7a RENAME TO as_idx_parent_piid',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['parent_award_piid'], name='as_idx_parent_piid'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_parent_award_piid_652c7e7a_like RENAME TO as_idx_parent_piid_like',
            state_operations=[

                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['parent_award_piid'], name='as_idx_parent_piid_like'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_fain_ae4c2f05 RENAME TO as_idx_fain',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['fain'], name='as_idx_fain'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_fain_ae4c2f05_like RENAME TO as_idx_fain_like',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['fain'], name='as_idx_fain_like'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_uri_71372082 RENAME TO as_idx_uri',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['uri'], name='as_idx_uri'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_uri_71372082_like RENAME TO as_idx_uri_like',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['uri'], name='as_idx_uri_like'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_earliest_transaction_id_e067cf6a RENAME TO as_idx_earliest',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['earliest_transaction'], name='as_idx_earliest'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_latest_transaction_id_f224bce6 RENAME TO as_idx_latest',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['latest_transaction'], name='as_idx_latest'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS award_search_period_of_performance_start_date_ec22ae77 RENAME TO as_idx_ppop_start',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['period_of_performance_start_date'], name='as_idx_ppop_start'),
                ),
            ],
        ),
        migrations.RunSQL(
            sql='ALTER INDEX IF EXISTS as_pop_current_end_date_64876276 RENAME TO as_idx_ppop_current_end',
            state_operations=[
                migrations.AddIndex(
                    model_name='awardsearch',
                    index=models.Index(fields=['period_of_performance_current_end_date'],
                                       name='as_idx_ppop_current_end'),
                ),
            ],
        ),
        # Drop duplicate secret indexes
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS award_search_awarding_agency_id_ae68ab38',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS award_search_funding_agency_id_2eba675b',
        ),
        #
        migrations.RemoveIndex(
            model_name='awardsearch',
            name='as_idx_recipient_hash',
        ),
        migrations.RemoveIndex(
            model_name='awardsearch',
            name='as_idx_recipient_unique_id',
        ),
        migrations.RemoveIndex(
            model_name='awardsearch',
            name='as_idx_action_date',
        ),
        migrations.RemoveIndex(
            model_name='awardsearch',
            name='as_idx_recipient_cong_code',
        ),
        migrations.RemoveIndex(
            model_name='awardsearch',
            name='as_idx_recipient_county_code',
        ),
        migrations.RemoveIndex(
            model_name='awardsearch',
            name='as_idx_recipient_state_code',
        ),
        migrations.RemoveIndex(
            model_name='awardsearch',
            name='as_idx_action_date_pre2008',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS transaction_search_award_id_7042e1c1',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_action_date',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_fiscal_year',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_pop_zip5',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_recipient_unique_id',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_parent_recipient_unique',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_simple_pop_geolocation',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_recipient_hash',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_action_date_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_award_key_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_fabs_key_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_fpds_key_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_piid_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_parent_award_id_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_fain_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_uri_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_is_fpds_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_tocp_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_naics_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_ext_com_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_psc_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_type_set_aside_pre2008',
        ),
        migrations.RemoveIndex(
            model_name='transactionsearch',
            name='ts_idx_cfda_aside_pre2008',
        ),
        # Dropping the singular unique indexes and replacing it with a unique constraint + index
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS as_idx_award_id',
        ),
        migrations.AddConstraint(
            model_name='awardsearch',
            constraint=models.UniqueConstraint(fields=('award',), name='as_idx_award_id_unique'),
        ),
        migrations.RunSQL(
            sql='ALTER TABLE rpt.transaction_search DROP CONSTRAINT IF EXISTS transaction_search_pkey',
        ),
        migrations.RunSQL(
            sql='DROP INDEX IF EXISTS transaction_search_pkey',
        ),
        migrations.AddConstraint(
            model_name='transactionsearch',
            constraint=models.UniqueConstraint(fields=('transaction',), name='ts_idx_transaction_id_unique'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(fields=['award'], name='as_idx_award_id'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(fields=['generated_unique_award_id'], name='as_idx_award_key'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(fields=['awarding_agency_id'], name='as_idx_awarding_agency_id'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(fields=['recipient_hash'], name='as_idx_recipient_hash'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(condition=models.Q(('recipient_unique_id__isnull', False)), fields=['recipient_unique_id'], name='as_idx_recipient_unique_id'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(django.db.models.expressions.OrderBy(django.db.models.expressions.F('action_date'), descending=True, nulls_last=True), name='as_idx_action_date'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(fields=['recipient_location_congressional_code'], name='as_idx_recipient_cong_code'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(fields=['recipient_location_county_code'], name='as_idx_recipient_county_code'),
        ),
        migrations.AddIndex(
            model_name='awardsearch',
            index=models.Index(fields=['recipient_location_state_code'], name='as_idx_recipient_state_code'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['afa_generated_unique'], name='ts_idx_fabs_key'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['detached_award_proc_unique'], name='ts_idx_fpds_key'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['generated_unique_award_id'], name='ts_idx_award_key'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['is_fpds'], name='ts_idx_is_fpds'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['piid'], name='ts_idx_piid'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['parent_award_id'], name='ts_idx_parent_award_id'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['fain'], name='ts_idx_fain'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['uri'], name='ts_idx_uri'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['-action_date'], name='ts_idx_action_date'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['-fiscal_year'], name='ts_idx_fiscal_year'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(condition=models.Q(('recipient_unique_id__isnull', False)), fields=['recipient_unique_id'], name='ts_idx_recipient_unique_id'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(condition=models.Q(('parent_recipient_unique_id__isnull', False)), fields=['parent_recipient_unique_id'], name='ts_idx_parent_recipient_unique'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['recipient_hash'], name='ts_idx_recipient_hash'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(condition=models.Q(('pop_zip5__isnull', False)), fields=['pop_zip5'], name='ts_idx_pop_zip5'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(condition=models.Q(('pop_country_code', 'USA'), ('pop_state_code__isnull', False)), fields=['pop_state_code'], name='ts_idx_simple_pop_geolocation'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['type_of_contract_pricing'], name='ts_idx_tocp'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['naics_code'], name='ts_idx_naics'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['extent_competed'], name='ts_idx_ext_com'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['product_or_service_code'], name='ts_idx_psc'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['type_set_aside'], name='ts_idx_type_set_aside'),
        ),
        migrations.AddIndex(
            model_name='transactionsearch',
            index=models.Index(fields=['cfda_number'], name='ts_idx_cfda_aside'),
        ),
    ]
